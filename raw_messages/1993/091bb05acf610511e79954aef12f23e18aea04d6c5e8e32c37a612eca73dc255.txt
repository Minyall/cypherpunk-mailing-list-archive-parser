From: pozar@kumr.lns.com (Tim Pozar)
Date: Wed, 7 Apr 93 13:16:33 PDT
To: hughes@soda.berkeley.edu (Eric Hughes)
Subject: Re: Real-time BBS Encryption??
In-Reply-To: <9304071935.AA26846@soda.berkeley.edu>
Message-ID: <m0nggXl-0002NuC@kumr.lns.com>
MIME-Version: 1.0
Content-Type: text


Eric Hughes wrote:
> >Is there a way to encrypt a remote users entire connection with
> >the BBS, so that they would have to have a special term program to access
> >the system?  
> 
> For PC's, replacing the terminal software is really the best way.
> There is no effective abstraction of serial port hardware in the PC
> world.  The int 0x14 driver in the BIOS was rampantly defective, and
> MSDOS does not provide a standard interface.
> 
> As a result, almost all comm software on PC's talks to the serial port
> directly.  Now in MS Windows, there is abstraction for ther serial
> ports, but I don't know how easy it is to insert a device layer.
> 
> >It would be best if the user only had to load a device driver
> >or something so that they wouldn't all have to use the same comm program.
> 
> It might be possible, using a 386, to make a driver that acted as if
> it were hardware but actually did encryption.  Ick.  Reliability and
> cross-program compatibility would be shit.  And it would have to be
> made compatible with whatever else was taking over the 386.

   Using something like a FOSSIL driver (a replacement serial port driver
that many BBSes use) you could do this.  I would imagine that it would
only encode when carrier is up and the BBS software sends an INT14 AX=xx
instruction to turn on encryption.

    Tim
-- 
    Internet: pozar@kumr.lns.com     FidoNet: Tim Pozar @ 1:125/555
Snail: Tim Pozar / KKSF / 77 Maiden Lane / San Francisco CA 94108 / USA
             POTS: +1 415 788 2022  Radio: KC6GNJ / KAE6247



