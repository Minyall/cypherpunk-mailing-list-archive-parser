From: RYAN Alan Porter <ryan@rtfm.mlb.fl.us>
Date: Tue, 1 Jun 93 21:34:12 PDT
To: cypherpunks@toad.com
Subject: CryptoStacker
Message-ID: <Pine.3.03.9306020004.A6908-c100000@rtfm>
MIME-Version: 1.0
Content-Type: text/plain



Thanks for all of the responses on my questions concerning the CryptoStacker
idea.  I am kind of sick of talking about it though, and so I went out
today and did some research on drivers and such.

I am planning to create a software implementation of a PGP driver starting
maybe tomorrow (I am being payed real dollars to write other code at the
moment) for on-the-fly HD encryption.  I haven't quite figured out how to
create a commercially distrubutable system yet, but there really is no
point sitting around arguing about this and that detail until somebody
actually goes out and tries it...

I have a feeling that this version will be slow as balls without hardware
support, but that's not really the problem, is it?  The main focus that I
have right now is making the thing work.

There have been lots of neat suggestions about multiple layers and
suchlike tooalso, which are all fine and dandy, but they kind of missed
the point: mainly what I am interested in is preventing access to the data
on my HD by anyone but ME, screw LANs and multi-user problems and all of
that, I just want to create a system whereby if the Secret Service busts
down my door tomorrow while I am not here to throw the drive across the
room, they will never be able to fetch out any incriminating evidence by
picking apart my system in some lab somewhere.  I can also see the
advantage of a business worrying about spying, or even government agencies
(wouldn't that be ironic) worrying about security and considering networks
insecure.

Anyway, we can add bells and whistles like network support and multiple
layers and suchlike after we figure out how to get the basic engine to
work, right?

I have also seen everyone suggesting DES instead of PGP.  I suppose that
would really be a great idea for speed and suchlike, for some reason I was
kind of attached to the whole public key idea, but I suppose that would be
kind of close-to-worthless in this context, wouldn't it?

I suppose we are to the point where I can use some actual technical
advice, no need to reinvent the wheel, right?  If anyone has any
information of the overall architecture of projects like Stacker or
DoubleStor, I would appreciate the input.  I have used both in the past
and I am kind of leaning toward a system like DoubleStor (which maintains 
directory structures and such, but compresses each file in place) for
simplicity, but I am kind of hesitant to leave even a hint of the overall
structure of the disk laying around for prying eyes.  Trouble is, I don't
have much experience screwing around with the FAT and such so I wouldn't
want to do anything so bold as munching the entire disk into a single file
and suchlike.  Any ideas?


-Ryan
the Bit Wallah









