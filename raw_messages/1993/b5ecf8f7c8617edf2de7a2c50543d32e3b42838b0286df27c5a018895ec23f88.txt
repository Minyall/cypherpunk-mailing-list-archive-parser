From: Eric Hughes <hughes@soda.berkeley.edu>
Date: Tue, 1 Jun 93 08:19:29 PDT
To: cypherpunks@toad.com
Subject: Software infrastructure
In-Reply-To: <9305311919.AA06505@toad.com>
Message-ID: <9306011553.AA16160@soda.berkeley.edu>
MIME-Version: 1.0
Content-Type: text/plain


>I think what is really needed is
>some way of dealing with people who read mail on their PC while using
>some kind of terminal program or similar package to connect to a BBS,
>commercial service, or Unix box.  

I think Hal is largely accurate here.  Certainly the "DOS box as
terminal" problem needs to be solved.  With the advent of 386BSD,
however, home Unix is going to be increasingly common.  

As an aside, I want to harp again on what I call the software
infrastructure problem.  If email and telecomm systems were well
structured, instead of exhibiting so much history in themselves, most
encryption freatures would be extremely easy to implement--just grab
the right hook.  Unfortunately this is not the situation.  Hence my
conclusion:

	The most important software development for wide scale
	deployment of cryptography has nothing _per se_ to do with
	cryptography.

Let's go back to the DOS-as-terminal issue.  The politics and
economics of DOS shareware is such that source code is almost never
made available.  Gnu public license software is rare in the DOS world.

I propose that interested cypherpunks write a DOS terminal program
which _is_ free software.  In order to overcome the inertia which Hal
properly observes is endemic to any software change, I submit that to
have source code available to fix or add features deemed desirable
will be a key factor in acceptance of this software.  I have my own
ideas about multiplexing the channel to support background POP and
file transfer, but I'll leave that for later.  Such software, of
course, would be properly layered to be able to add encryption at the
key junctures.

It would be entirely appropriate to discuss such architecture here on
the cypherpunks list.  When the developers's effort starts, I promise
to find a way for them to have their own mailing list.

Eric




