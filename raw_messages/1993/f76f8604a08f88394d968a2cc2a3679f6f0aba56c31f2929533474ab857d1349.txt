From: mgream@acacia.itd.uts.edu.au (Matthew Gream)
Date: Tue, 14 Sep 93 23:40:32 PDT
To: cypherpunks@toad.com (Cypherpunks List)
Subject: Re: more than spread spectrum
In-Reply-To: <9309150353.AA06198@ellisun.sw.stratus.com>
Message-ID: <9309150640.AA02395@acacia.itd.uts.EDU.AU>
MIME-Version: 1.0
Content-Type: text/plain



In reply to (Carl Ellison):

| I'll volunteer to do the software for the node card.  Does anyone have
| hardware design/fab to donate to the effort?

Hmm, this is nice timing I guess :-)

Over the last 3-4 weeks I have been mulling over in my head (you know,
that process before you actually start putting down on paper) a design
for a relatively 'simple' learning bridge, using off the shelf support
chips. I'm currently in the middle of an academic semester, and if I
don't happen to work during the coming break (for the non-australians,
our academic year is mar->nov), then this is something I will take up.

The actual design I have in mind has a 839X IEEE802.3 CSMA/CD ethernet
controller on the network side plus an 8088 embedded controller to do
all the work (or, maybe something else, but 8088 assembly is familiar 
to me and its a real cheap chip). The output stage is a synchronous 
HDLC varient (SABM mode, cut down for pp operation) running at a select-
able synch rate (anywhere from 19.2k to 10mbps, obviously @ 19.2k you 
would have problems on a loaded ethernet).

One of the main reasons for starting this is that another colleague of
mine has an interest in constructing the 2mbps microwave (10GHz) project
as seen in your local ARRL handbook. This would tie in nicely, but
further to this, it has the possibility to interface to any communications
medium you desire (as long as it can handle a synch incoming data stream).
It oculd plug into the other side of a spread-spectrum board, it could
be used with an async interface and a pc to tunnel traffic across
another network, and so on.

There is also a possibility to use some of the HDLC initialisation
phases to exchange public keys :-), and to encrypt information frames
(headers == plaintext) on the fly. 'Generic' and 'Modular' is a basic
philosophy of mine. If I do have the time, and complete this project,
then I hope to make it 'available' to the masses (so to speak). I can
envisage that there would be people interested in such a setup.

As an undergrad Computer Systems Engineer student, there are no problems
with access to appropriate design and testing equipment, its just a 
matter of me getting the time.

Of course, all this is 'in my head' at the moment, so nothing is definite.
Discussion, ideas and pointers are welcome, although the technical side
of things maybe straying from the cypherpunk agenda.

Matthew.
-- 
Matthew Gream,, M.Gream@uts.edu.au -- Consent Technologies, 02-821-2043.





