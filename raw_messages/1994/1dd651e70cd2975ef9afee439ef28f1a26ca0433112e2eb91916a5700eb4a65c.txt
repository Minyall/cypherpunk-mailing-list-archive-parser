From: "Pierre Omidyar" <pierre@eshop.com>
Date: Wed, 25 May 94 10:59:29 PDT
To: "Harry Bartholomew" <perry@imsi.com
Subject: Re: Patentability (was Graph
Message-ID: <199405251740.KAA02487@netcomsv.netcom.com>
MIME-Version: 1.0
Content-Type: text/plain


        Reply to:   RE>Patentability (was Graph isomorphism based PK cr)
[disclaimer: I'm not an expert, but I've done some work with patents.]

I believe the best way to ensure that something becomes unpatentable is to:

  1. Publish it first. That reserves your right to file a patent if you
     want. No one else can patent your original work.

  2. Don't file a patent within one year of publication. After one year
     you lose your right to file. No one else can file, because by then
     the invention is considered to be public knowledge (since it was
     published), so it would not satisfy the "original and novel"
     patentability test.

If you keep the process a secret, someone else could independantly invent it and
patent it. If you publish it before someone else files, it becomes public
knowledge and is unpatentable except by the original inventor within one year of
publication.

Pierre

--------------------------------------
Date: 5/25/94 9:21 AM
To: Pierre Omidyar
From: perry@imsi.com

Harry Bartholomew says:
> > Jay Prime Positive says:
> > > I only worry that if I publish, it could be patented.  And I don't
> > > want the algorithm to end up in the hands of the software patent
> > > folks.  Especially if they will be making money off it, and I wont.
> > 
> > If you publish, only you could patent it. There is only danger if you
> > don't publish, in which case others can independently make the same
> > discovery and patent it.
> > 
> > Perry
> 
>     But you would then need to file within one year of the publication
>     date I think.

His whole point was that he wanted to render the process unpatentable.

Perry

------------------ RFC822 Header Follows ------------------



