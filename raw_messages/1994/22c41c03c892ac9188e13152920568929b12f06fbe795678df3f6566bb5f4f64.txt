From: jamiel@sybase.com (Jamie Lawrence)
Date: Fri, 8 Jul 94 11:13:56 PDT
To: Michael Handler <dmarner@mis.nu.edu>
Subject: Re: Request: tamper-proofing executables
Message-ID: <9407081812.AB07971@ralph.sybgate.sybase.com>
MIME-Version: 1.0
Content-Type: text/plain


At  1:19 PM 07/08/94 -0400, Michael Handler wrote:

>        OTOH, if anyone else has come up with a scheme that is hard to 
>break / unbreakable, *please* come formward and correct me. I have a few 
>applications that I'd like to apply this to. :)

The only method I have heard (and this is merely hard to break) is to put
the hash value in a dongle. Then everyone will hate your program.

Another method that could provide interesting results is to throw
code in that will cause the program to function *differently* if
hacked. I'm thinking of (I think- correcttions wecome) AutoCad,
which was dongled and hacked, but the hack caused some math funciton
or another to return erroneous results. This is just obfusification,
but could give a hacker some major headaches.


-j
--
"Blah Blah Blah"
___________________________________________________________________
Jamie Lawrence                                  <jamiel@sybase.com>





