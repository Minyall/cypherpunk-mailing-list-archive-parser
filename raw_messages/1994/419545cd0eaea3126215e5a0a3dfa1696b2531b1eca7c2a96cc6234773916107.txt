From: hughes@ah.com (Eric Hughes)
Date: Wed, 30 Mar 94 12:23:42 PST
To: cypherpunks@toad.com
Subject: Crypto and new computing strategies
In-Reply-To: <199403301754.AA00993@zoom.bga.com>
Message-ID: <9403302009.AA00292@ah.com>
MIME-Version: 1.0
Content-Type: text/plain


>I am not shure that it has been demonstrated that a QM mechanis is necessarily
>solely of a Turing architecture. 

The Bekenstein Bound gives limits both on the expected maximum number
of quantum states encodable in a given volume of space and on the
expected maximum number os transitions between these states.  If this
bound holds (and it certainly seems to hold for EM fields), then a
probabilistic Turing machine will be able to simulate it.

>Also there is the potential to use neural networks at these levels (which are
>not necessarily reducable to Turing models, the premise has never been proven)

If you have infinite precision, the statement is unproven.  If you
have finite precision, you get a Turing machine.  You never get
infinite precision in real life, even with quantum superposition.

Steve Smale did some work a few years ago where he made Turing-type
machines out of real numbers, i.e. infinite precision.  P=NP for this
model, and the proof is fairly easy.  From an information-theoretic
point of view, you can encode two real numbers inside of another one
and do computations in that encoded form, because a real number
encodes an infinite amount of information.

If it's finite, it's a Turing machine.  If it's expected finite, it's
a probabilistic Turing machine.  If it's infinite, it cannot be
implemented in hardware.

Eric




