From: tcmay@netcom.com (Timothy C. May)
Date: Sat, 23 Apr 94 15:46:54 PDT
To: dat@ebt.com (David Taffs)
Subject: Re: T-Shirts, Neil Young, Asilomar, and Smalltalk
In-Reply-To: <9404232131.AA01505@helpmann.ebt.com>
Message-ID: <199404232246.PAA28690@mail.netcom.com>
MIME-Version: 1.0
Content-Type: text/plain


David Taffs has some very interesting points, which largely I am in
agreement with:

> You might want to check out research about "the Byzantine Generals
> problem", e.g. in ACM's TOPLAS, including (I believe) stuff about
> synchronizing distributed mutually-suspicious clocks. As I understand
> it, many these problems have been generally solved in theory, and are
> just waiting for demand and resources to be put in practice. There is
> room for more work, of course.

Thanks for the ref. My feeling is that the work on mutually suspicious
cooperating agents was "ahead of its time." This work was started in
the 60s, and then the model for compuation shifted from many users,
many program on a single machine to one user-one machine (for the most
part), and the flat address/RISC/C model "worked." (I'm not saying
these are all the same thing, but they're usually found together.)

With networks, and especially with heterogeneous mixes of agents
executing complicated protocols (a la digital cash), the time may be
ripe to reopen some of these issues. Chaum took the "Dining
Philosophers" problem (deadlock) and turned it into the "Dining
Cryptographers" problem (the full text of the paper in in the
soda.berkeley.edu archives, pub/cypherpunks). And "Byzantine
Agreement" (is this the same thing as Byzantine Generals?) shows up, I
recall, in some crypto papers.

> Objects are Great; C++ (using objects, in I believe the way you mean)
> is clearly the language of choice for the virtually the entire

Yes, of course this is what I meant. That's why I mentioned the
Smalltalk approach. (I won't get into issues of performance of C++
over Smalltalk and Lisp systems...my contention is that there's a vast
amount of computer power out there and a (relative) shortage of good
programmers and their time, and that this implies that only truly
time-critical things or many-times-replicated programs warrant writing
in lower--level languages. A religious point, no doubt.)

> So I think Objects are a Good Idea, but I think Segmented Logical Address
> Spaces are in principal Less Good (within reason) than a Single Large
> Address Space (equivalent in size, within reason) with compile-time
> "proofs" of non-interference.

Indeed, and this was the Great Lesson of the i432 and other
capability-based machines, as well as the too-small segments of the
286. (The 486 and Pentium still have segments, as everyone knows, but
they are much larger....in fact, I am told that most folks set the
segment to the max and forget about it after that.)

Ironically, the power of our distributed crypto systems (many
machines, many users, many remailers, etc.) is that they are
"cryptographically segmented," to coin a term. That is, the various
machines are logically segmented, with code only running locally and
all communication done via the various comm protocols. This is the
strenght of these systems, that some spaces are "private."


>    Food for thought. I'm wondering if a project to implement a kind of
>    "Digital Money World," perhaps in SmalltalkAgents, wouldn't be an
>    interesting project. (Many will probably tell me that a collection of
>    Perl scripts would be more "portable" and more useful to the current
>    Unixcentric community....something I'd like to see more discussion
>    of.)
> 
> I suspect the framework of choice would be some sort of MOO or MUD. Of
> course, once it hit production status, then transliteration into Perl
> install scripts would be appropriate.

I would agree, except the history of "develop it in an
ultra-high-level language/environment and then port it later" has not
been too encouraging: for whatever and various reasons, the ports
rarely take place.

But the idea of a MUD or MOO being a place to try out tools and then
somehow get them "compiled" is a good one.

>    Exciting times.
> 
> You bet -- it sure is interesting to be alive in these "latter days".
> As his ex-Prince-ness has said: "We're gonna party like it's 1999".

More purple prose?

> Of course, we'd better get strong crypto distributed before the Second
> Coming -- you think the current US government is involved in a power
> grab, you just wait!!! This new government will really know how to
> take care of non-conformists -- Waco is nothing compared to what they
> are planning (read: fiery brimstone)...

You'll find many on this list who agree with every point here.

> I wonder if Jesus can create a number so large he can't factor it?
> 

I haven't found one yet.

> Pardon my excursion into various religious topics -- arguably this
> list is also about religion ("religion is what you do" -- "cypherpunks
> write code" -- belief that strong crypto should be widely distributed
> is certainly a religious tenet for some on this list). I hope I
> haven't offended anybody important...

I enjoyed your comments, for one. 


--Tim May


-- 
..........................................................................
Timothy C. May         | Crypto Anarchy: encryption, digital money,  
tcmay@netcom.com       | anonymous networks, digital pseudonyms, zero
408-688-5409           | knowledge, reputations, information markets, 
W.A.S.T.E.: Aptos, CA  | black markets, collapse of governments.
Higher Power: 2^859433 | Public Key: PGP and MailSafe available.
"National borders are just speed bumps on the information superhighway."



