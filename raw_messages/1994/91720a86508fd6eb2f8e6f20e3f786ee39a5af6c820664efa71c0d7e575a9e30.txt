From: rarachel@prism.poly.edu (Arsen Ray Arachelian)
Date: Mon, 1 Aug 94 20:39:21 PDT
To: a.brown@nexor.co.uk (Andrew Brown)
Subject: Re: What kind of encryption to incorporate?
In-Reply-To: <Pine.3.89.9408011055.A27305-0100000@vulcan.nexor.co.uk>
Message-ID: <9408020326.AA16906@prism.poly.edu>
MIME-Version: 1.0
Content-Type: text


> ... well almost.  It's trivial to write a program that extracts the LSB's 
> from a GIF file and then determine their randomness.  Truly random data 
> gives away the presence of an encrypted file. The solution is to choose 
> the LSB's that you alter according to the output from a decent random 
> number generator so that each LSB has a probability of being altered.

Take a look at WNSTORM (WNS210.ZIP) which contains the WNINJECT program.
It, along with WNSTORM can be used to build a decent steganography system
that makes use of existing LSB's to hide the presence of stego.  If you
like, feel free to build a GIF module for it.  (WNINJECT uses PCX right now
and I haven't had the time to mess with GIFs.)

If you guys are seriously interested, I'm more than willing to lend a hand.
You can certainly use WNSTORM and it's tools to build something better (as long
as you give me some credit for the original work. :-)

Basically you first use WNINJECT to extract the LSB's out of a PCX image, then
you feed those LSB's into WNSTORM which encrypts into them but leaves most of
them untouched and doctors some of the bits against statistical analysis)
then you take the output from WNSTORM and WNINJECT's it back into the PCX
giving you a stegoe'd image that closely matches the original and which is
hard to detect that it has a change unless you have the original.




