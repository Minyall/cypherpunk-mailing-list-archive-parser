From: "David E. Smith" <dsmith@midwest.net>
Date: Wed, 6 Dec 95 11:03:26 PST
To: "Daniel 'genius' Charpentier" <drcharpe@hamlet.uncg.edu>
Subject: Re: PGP
Message-ID: <199512061921.NAA00167@cdale1.midwest.net>
MIME-Version: 1.0
Content-Type: text/plain


-----BEGIN PGP SIGNED MESSAGE-----

At 12:54 PM 12/6/95 -0500, you wrote:

>   I've tried to find out the answers to my
>questions myself but I haven't been very successful.
>Actually, I haven't been successful at all.  First of all,
>I've been using PGP on my computer but when I tried to port it
>over to my unix account it didn't work.  I took the source code
>and tried to compile it using the unix g++ compiler but it gave
>me all of these errors.  Where can I find PGP that is already
>compiled for unix or at the very least will compile for unix?
>Secondly, if I create a program that makes using PGP more
>user friendly can I let other people have it ( for FREE )?
>Lastly, what is considered overkill with cryptography?
>I don't believe anything is.  My programs accept what the user
>inputs for how large prime numbers should be ( my public
>key programs ) but I make them able to accept values that go
>up to 30720 bits ( I don't believe a number can ever be large
>enough ).  You can never be to safe...never.

Firstly - and don't take this personally - how much computer
knowledge do you have?  The PGP sources use all sorts of
#ifdefs and other kludges.  A fair amount of C coding
ability is needed to get the damn things to do much of
anything.  (Hell, I can't read most of it - my precompiled
MSDOS version does what I need it to do.)

If you make PGP more user friendly... well, PGP 3.0 is still
coming Real Soon Now (TM) and it will include an API that
will make hooking into it ridiculously simple.  Beyond that,
there are already a number of good DOS and Windows shells
for it, and nobody on unix-flavoured systems expects a clean
user interface anyway :)  (Well, except for XWindows...)
But, if you write it - and I'm cautioning you to be sure
you don't reinvent the wheel - you can distribute it freely.
I suggest using the terms of the GNU GPL.

And the key values - well, you can give it 32k bits, but 1.
generating a key pair could take a prohibitively long time;
2. nobody else can use it (the default PGP distributions
are capped off at 2047 bits).

Good luck.
Dave
-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBMMXoSwwyfvCScyE5AQEwtQQA0IHRhQiBej05B8KfFMJh95+XVvzW5ax1
SgQGrNABIdnyOkDSgPLA97vQ04agU8ytOyaDMW/X4IuI/zZgsqOzegsb57+TEcAz
sB7mvzmW0tTrEEdMRjBkaZRAnf0wTrf2EqtR3lshJCgzK1MB6szG3w4N8yb26YKD
2VyBrX10nRY=
=sRw4
-----END PGP SIGNATURE-----
----- David E. Smith, c/o Southeast Missouri State University
1210 Towers South, Cape Girardeau MO USA 63701-4745
+1(573)339-3814, "dsmith@midwest.net", PGP ID 0x92732139
http://www.midwest.net/scribers/dsmith/




