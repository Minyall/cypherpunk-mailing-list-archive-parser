From: DANIEL CHARPENTIER <drcharpe@hamlet.uncg.edu>
Date: Wed, 6 Dec 95 11:26:46 PST
To: cypherpunks <cypherpunks@toad.com>
Subject: Re: PGP
In-Reply-To: <199512061921.NAA00167@cdale1.midwest.net>
Message-ID: <Pine.SOL.3.91.951206141124.5233C-100000@hamlet>
MIME-Version: 1.0
Content-Type: text/plain


On Wed, 6 Dec 1995, David E. Smith wrote:

> Firstly - and don't take this personally - how much computer
> knowledge do you have?  The PGP sources use all sorts of
> #ifdefs and other kludges.  A fair amount of C coding
> ability is needed to get the damn things to do much of
> anything.  (Hell, I can't read most of it - my precompiled
> MSDOS version does what I need it to do.)


    Sorry...I was always taught that the user should not
be mandated to finish the job of the programmer.  Please,
do not take me wrong, PGP is a remarkable tool...but I
was not aware I had iron out the bugs.  That part is the
easiest to do compared with the genius of the program...
but I still should not have to do it.


> If you make PGP more user friendly... well, PGP 3.0 is still
> coming Real Soon Now (TM) and it will include an API that
> will make hooking into it ridiculously simple.  Beyond that,
> there are already a number of good DOS and Windows shells
> for it, and nobody on unix-flavoured systems expects a clean
> user interface anyway :)  (Well, except for XWindows...)


       Well maybe they ( people on "unix-flavoured systems" ) should
expect a clean interface.  If the interface were more sound then
maybe the common man ( person ) wouldn't be so scared of it.  I have 
a lot of friends that gave up on cryptography because they could not
get the darned programs to work ( at least the good ones anyway ).

         

> And the key values - well, you can give it 32k bits, but 1.
> generating a key pair could take a prohibitively long time;
> 2. nobody else can use it (the default PGP distributions
> are capped off at 2047 bits).

    I was not using 32k bit keys with PGP...but I'll look at the
code.  To tell you the truth I never thought about modifing PGP
to generate that large of a key.  When I finish it I'll post the
source here.  I'm sure someone here would like to at least have
the option.



    Thank you for the input.





