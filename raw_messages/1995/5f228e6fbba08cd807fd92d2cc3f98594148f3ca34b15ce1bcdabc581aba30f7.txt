From: ghio@myriad.pc.cc.cmu.edu (Matthew Ghio)
Date: Mon, 23 Jan 95 18:55:27 PST
To: Remailer-Operators@c2.org
Subject: Re: jpunix.com and MX'ing
In-Reply-To: <199501231457.GAA16462@largo.remailer.net>
Message-ID: <m0rWbPO-000yxSC@myriad.pc.cc.cmu.edu>
MIME-Version: 1.0
Content-Type: text/plain


eric@remailer.net (Eric Hughes) wrote:

>    From: "John A. Perry" <perry@jpunix.com>
> 
>    > A question, from an internet mail novice:  How does the 'invisible'
>    > remailer advertise itself as its 'visible' name in it's outgoing
>    > mail?  
> 
> Perhaps the easiest thing to do is to add a Received: field to all
> outgoing remailed mail so that it appears that the visible site is
> handling the invisible site as if it were UUCP or a firewall or
> mailhub or something.  Since anybody who really wants find out who
> actually owns the machine is going to, you might as well indicate the
> real relation up front, namely, that the owner of the visible machine
> routs mail for the invisible one.  In other words, there would be two
> Received: fields in outgoing remailed mail.  The first (lower, later
> in the stream) Received: field would be generated by the remailer
> software.  The second would be added by the system sendmail.
> It will be tricky to make this look just right.

This doesn't really sound too difficult.  Just have a script run as
user uucp which adds the header and hands the message to sendmail.

> Another way to mask this is to give the remailer its own IP address.
> It's easy to recompile extra slip interfaces into a kernel; each gets
> its own IP address.  Routing the output of the remailer through these
> extra interfaces can require some hackery, though.  I only know about
> this second hand, but evidently the BSDI 1.1 release added some BSD
> 4.4 feature that makes this kind of IP hack much easier.  

Yes, this can be done, but getting IP addresses isn't easy for most
people.  I would propose that we use the unassigned IP address blocks
which are reserved for private networks (see RFC 1597).  In fact,
we could even connect the remailer systems that use the private address
space via IP tunneling (swIPe maybe?  or SLIP over telnet?)  These
remailer hosts could then communicate with each other on a private
network, and gateway mail to the internet via "firewall" hosts.  This
approach would also allow us to connect private machines to the
remailer network by providing IP connectivity to hosts which currently
use software such as Term or TIA.  Having more remailers on private
machines would be a good thing IMHO.  Finally, such a network might
serve as a basis for building future untracable/anonymous IP routing
capability.

> What we're creating here, of course, is virtual machines.  Unix
> kernels have supported multiple processes and multiple users for a
> long time.  I expect multiple virtual machines this decade.

I wonder if the "Term" program could be modified to act as a virtual
machine?  For those not familiar with the program, it creates a unix
domain socket and supplies IP services via it, forwarding them over
a modem connection.  Many programs have been modified to work with
it.  Perhaps term could be modified to send its output to an IP
interface instead.  Each user on the system can run his own term
process and have his own virtual machine.




