From: turner@TeleCheck.com
Date: Wed, 13 Dec 1995 05:53:57 +0800
To: cypherpunks@toad.com (Cypherpunks Mailing List)
Subject: Re: [NOISE] anti-copy
In-Reply-To: <199512110852.DAA15235@opine.cs.umass.edu>
Message-ID: <9512112112.AA03120@mercury.telecheck.com>
MIME-Version: 1.0
Content-Type: text/plain



futplex@pseudonym.com said:
>> Daark writes: How would it be possible to create files that KNOW they 
>> are  a copy?  

> It's not, to the great dismay of the Software Publishers Association 
> (or  whatever they're called). 

Not to pick nits, but I was deeply into cracking^h^h^hbacking up 
software in the 80's, when I got my first Apple II complete with
4K of RAM.

There are several schemes of copy protection that were used, like strange
sector/track interleaving, and burning the floppies with lasers to
render certain sectors unreadable/writable.  The program would attempt
to read that area of the disk, and if it couldn't it was on the original
media.  

Of course, this was in the days before 20MB MFM drives became the rage,
when Woz was king.

I guess the only way for a program to know if it was a copy
would be to have itself figure out what track/sector it is on and inject
and/or compare that information into the executable.  But since this 
information is no longer easy to come by as operating systems become 
more protected, this wouldn't be viable.  Especially if you take into
account that disks go bad, and backups are needed.

More importantly, it would be very easy to hunt down and replace with 
NOPs.  More so than taking out the dreaded, "enter the phrase on line
3 on page 25 on your manual..."

To summarize, its possible (under _some_ operating systems), but it is 
not a good solution to the problem.




