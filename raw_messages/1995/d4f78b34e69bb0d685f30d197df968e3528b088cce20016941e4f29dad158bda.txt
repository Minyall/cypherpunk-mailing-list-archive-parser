From: "Bill O'Hanlon" <wmo@digibd.com>
Date: Fri, 27 Jan 95 14:05:18 PST
To: jamesd@com.informix.com
Subject: Re: Oops, Correction: one big error in "Even more unix holy war."
In-Reply-To: <9501272119.AA00461@carbon.informix.com>
Message-ID: <9501272204.AA27636@poe.digibd.com>
MIME-Version: 1.0
Content-Type: text/plain


On Fri, 27 Jan 1995 13:19:01 +0800  jamesd@com.informix.com wrote:
--------
> > source code variables.
> 
> On this I was of course totally wrong:
> 
> Unix has symbolic debugging equal to DOS/Windows.
> I was under the false impression that it only had
> C code interpretation.
> 
> This is an error -- what I said was true for C++, but 
> then in Windows we too are forced to primarily use
> interpretation to debug C++.   C++ symbolic debuggers
> are not up to acceptable capabilities in either system.
> 
> Sorry.

It just gets worse and worse.

James, the debugging environment I've been referring to, and the product
I've been debugging is written in C++.  Let me be perfectly clear, here:

The product is an embedded processor.
I'm running a development environment on a Sun workstation.
The code running on the processor is written in C++.
The debugger is a symbolic debugger, and it can do breakpoints on lines of
code, displays of expressions involving symbolic names, and all of the other
points about debuggers that I recall you making.
The code uses all C++ features quite heavily.
There is no C or C++ interpretation involved.
The environment is freely available.






