From: "Perry E. Metzger" <perry@piermont.com>
Date: Tue, 28 Nov 1995 22:19:42 +0800
To: wlkngowl@unix.asb.com
Subject: Re: A random-noise sampling device for DOS
In-Reply-To: <DIr6B1.4yn@news2.new-york.net>
Message-ID: <199511281407.JAA13573@jekyll.piermont.com>
MIME-Version: 1.0
Content-Type: text/plain



wlkngowl@unix.asb.com writes:
> I'm working on a random noise sampling device for DOS, and so far have
> a prototype version that samples the keyboard timings.  I'm unsure of
> a good way to implement it...
> 
> Device timings (and in the future periodic samplings of the mouse
> position or sound-card noise input) are put into a ring-buffer of raw
> data and the output is a straight secure hash of it...  (when the
> output buffer is used it, it just rehashes the data in the buffer at
> the moment...)

Doesn't sound good.

> I'm looking for some advice on how to determine when the raw data has
> been "used up" and worth processing/encrypting before re-hashing it...

What I would suggest is accumulating enough data that you think you
have enough entropy for one hash function's worth of output, hash it,
and put that into an output queue. Then don't reuse the data, or if
you do, reuse it in combination with enough new data that you think
the new data has one hash function output's worth of entropy.

Perry




