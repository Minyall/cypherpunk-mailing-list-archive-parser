From: Allan Bailey <allan@elvis.tamu.edu>
Date: Thu, 2 Feb 95 07:08:49 PST
To: cypherpunks@toad.com
Subject: Re: Remailer encryption module
In-Reply-To: <199502021444.GAA07493@largo.remailer.net>
Message-ID: <9502021508.AA28912@elvis.tamu.edu>
MIME-Version: 1.0
Content-Type: text/plain


-----BEGIN PGP SIGNED MESSAGE-----

>    From: Nathan Zook <nzook@bga.com>
>    I also believe that hacking PGP is a bad thing (tm), because it means that
>    every time an upgrade comes out, it will need to be re-hacked, and once you
>    start hacking, when do you stop?

Sounds like the UNIX philosophy to me.  :) 

> I agree.  PGP just does not have the support for the encryption
[...]
> That means that we have to replace PGP as the encryption module for
> remailers.  The first thing to do is to design a data format which
> supports what the remailers need now, and nothing speculative.  Since
> this data format has a single purpose, we can make new revisions more
> easily than for a general purpose package.
> 
> Once we get a data format, implementations will follow.

Isn't this what the forthcoming PGP RFC is about?  Also, what about
the PEM "standard"?  If remailers agree to follow one or more of those
standard data format specifications, then someone could just
ripup PGP and implement modules to produce those data formats.

Consider what CP did with his(her?) PGPTools kit.  As long as we have
an agreeable dataformat "standard", the implementation becomes
irrelevant.  

Maybe I'm just confused and not following the thread closely
enough....

- --
Allan Bailey, allan@elvis.tamu.edu        | "Freedom is not free."  _O_
Senlima Diverseco je Senlimaj Kombinajxoj.| allan.bailey@tamu.edu    |
KC5KSF                                    |nefud-the-delirious@tamu.edu
GCS w+ v-/+ C++++ U@$ P+++ L++ E++ N++ po--- Y++ b++

-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBLzD1ghDxfDCMTq7JAQH9SgQA1K0i/PndcdaZFHkRwP2IrWbMihXvCTRc
0G0xf3GUH4KLlR5HC/qUBurvreoRCF2PjM6cDpx1Ao2pRbB/jeiRINC/5OuhZtrJ
A1KpWN51XR2c4BXRTxXvNGCUMzzH7B8uLjR01n3EWabHljoKX8HHwWKKXTe5S/1Q
AQlh00/0iA0=
=+b0t
-----END PGP SIGNATURE-----





