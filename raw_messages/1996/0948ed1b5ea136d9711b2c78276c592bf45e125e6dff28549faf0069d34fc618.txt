From: jack <thecrow@iconn.net>
Date: Mon, 23 Sep 1996 06:18:44 +0800
To: coderpunks@toad.com
Subject: Evolving algorithm for faster brute force key searches?
Message-ID: <31DD74B1.BB3@iconn.net>
MIME-Version: 1.0
Content-Type: text/plain


I got an idea last night, maybe this has already been thought of and
tried, but I thought I would give a quick outline of the program I was
thinking of:

-Specify a maximum key size (assume 1024bits or something)
-Start with an arbitrary key "aaaaaaaaaaaaaa"

Start a loop

-create five mutations of the key
-use each key to try and decrypt a few bytes of the message
-run a (or some) statistical analysis tests and come up with a value
for how 'random' the decrypted bits are
-Pick the key that produced the least random ouput

Repeat


Probably this wouldnt work on any very strong algorithm, but it seems it
might be effective against some.  I am going to write the code and try
it out on RC4 and on a weakling little algorithm I wrote a while back.
Let me know what yall think.




