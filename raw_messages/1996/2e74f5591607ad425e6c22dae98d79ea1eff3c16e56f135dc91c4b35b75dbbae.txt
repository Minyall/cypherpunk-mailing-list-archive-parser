From: Gary Howland <gary@systemics.com>
Date: Thu, 8 Aug 1996 07:02:18 +0800
To: Cerridwyn Llewyellyn <ceridwyn@wolfenet.com>
Subject: Re: appropriate algorithm for application
In-Reply-To: <2.2.32.19960806232209.006e2c84@gonzo.wolfenet.com>
Message-ID: <3208DD65.237C228A@systemics.com>
MIME-Version: 1.0
Content-Type: text/plain


Cerridwyn Llewyellyn wrote:
> 
> I need an algorithm/protocol that is capable of encrypting numerous
> files with separate keys, but there also needs to be a master key
> that will be able to decrypt all of them.  Is there such a system
> that is relatively secure?  I'd prefer the system to be as secure
> as possible, but in this application, security is secondary to
> functionality.  Thanks... //cerridwyn//

Are you after a working program, or just a design?

You could always use an escrowed public key generator (discussed on
sci.crypt some time ago), where the keys all have a factor of 'N'
embedded in 'N', but encrypted with the master key.

(I'd be prepared to write the code that generates the keys, if
someone does the "master decrypt" side of things).

Gary
--
pub  1024/C001D00D 1996/01/22  Gary Howland <gary@systemics.com>
Key fingerprint =  0C FB 60 61 4D 3B 24 7D  1C 89 1D BE 1F EE 09 06 
^S
^A^Aoft FAT filesytem is extremely robust, ^Mrarely suffering from^T^T




