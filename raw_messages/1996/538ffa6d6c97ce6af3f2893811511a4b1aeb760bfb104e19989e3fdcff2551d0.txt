From: Damien Lucifer <root@HellSpawn>
Date: Fri, 30 Aug 1996 07:50:21 +0800
To: cypherpunks@toad.com
Subject: RE: Mimic Function Stego Programs?
Message-ID: <Pine.LNX.3.91.960829163251.6291B-100000@HellSpawn>
MIME-Version: 1.0
Content-Type: text/plain


---------- Forwarded message ----------
Date: Thu, 29 Aug 1996 16:32:40 -0400 (EDT)
Subject: RE: Mimic Function Stego Programs?

On Thu, 29 Aug 1996, * wrote:

> better than the 64 word ones I've used. I'd like to get a hold of these 
> (or the program, if it's not texto). I mailed DJ about it, but he said 
> he picked it up from a newsgroup he couldn't remember. If you follow up 
> please let me know any results. Fascinating stuff ...


Donno, the next hop from 64 words per type is 4096 words per type, a very 
tall order.

I've been working on a text steg'ing program for a while that operates 
under a different premise, however. It keeps a dictionary of word pairs, 
with each word in the pair being a synonym for the other.  It will read 
through a donor file, swapping words based on whether we need to hide a 1 
or a 0.  The encoder is working right now but the decoder is not.
 
A quick example:

dictionary: 1=sofa 0=couch
input: The couch is very comfortable
output (0): The sofa is very comfortable.
output (1): The couch is very comfortable.

The output text is virtually identical to the input text, and would (in 
most cases) easily fool the average human reader, as well as fooling 
simple mail filters. 

The main problem is that very little can be hidden in a text file in this 
manner.  I have one peice of text that is 50k, and can conceal about 64 
characters of data.  More typical numbers are around 15-25 characters/50k, 
which is why I never finished the decoder. Once i started encoding things, 
and realizing how little could be hidden in this manner, I stopped working 
on it. 

At the moment the dictionary is very small; nearly all of the words are 
relevant to only pornographic text (since porno is both predictable, and 
repetitive, i thought it would be a good place to start). :) 

I have the source code around, if you care to take a look at it.










