From: Jack Mott <thecrow@iconn.net>
Date: Sat, 13 Apr 1996 15:51:56 +0800
To: cypherpunks@toad.com
Subject: Known Plaintext attacks on symmertric algorithms
Message-ID: <316EF0D7.3B80@iconn.net>
MIME-Version: 1.0
Content-Type: text/plain


Now maybe I have this all wrong, but it is my understanding that a known 
plaintext attack is when the cracker knows part of the plaintext of an 
encrypted file.  Then he/she uses that and runs the inverse of the 
algorithm to calculate the key.
  Whether or not I am right about what known plaintext means, isn't the 
entirely possible on all of the symmetric algorithms out there? If I 
grab a file that I know is, say, a standard credit card transaction 
form, and I know what the first 256 bytes are because they are always 
the same, shouldn I always be able to find the entire key that 
corresponds with those 256 bytes? (assuming the key is 2048 bits or 
less) And then with that key decrypt the whole file?
  Maybe I am missing something but it seems that all the symmetric 
algorithms are vulnerable to this, and I thought of a fix, but it 
involves having two keys (or one thats twice as big)
-- 
thecrow@iconn.net
"It can't rain all the time"

RSA ENCRYPTION IN 3 LINES OF PERL
---------------------------------------------------------
#!/bin/perl -sp0777i<X+d*lMLa^*lN%0]dsXx++lMlN/dsM0<j]dsj
$/=unpack('H*',$_);$_=`echo 16dio\U$k"SK$/SM$n\EsN0p[lN*1
lK[d2%Sa2/d0$^Ixp"|dc`;s/\W//g;$_=pack('H*',/((..)*)$/)




