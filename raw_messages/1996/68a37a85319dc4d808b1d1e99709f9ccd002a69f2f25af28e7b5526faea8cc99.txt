From: "Perry E. Metzger" <perry@piermont.com>
Date: Tue, 20 Feb 1996 09:10:42 +0800
To: IPG Sales <ipgsales@cyberstation.net>
Subject: Re: Internet Privacy Guaranteed ad (POTP Jr.)
In-Reply-To: <Pine.BSD/.3.91.960219170127.5326A-100000@citrine.cyberstation.net>
Message-ID: <199602192346.SAA00359@jekyll.piermont.com>
MIME-Version: 1.0
Content-Type: text/plain



IPG Sales writes:
> We are not currently revealing all the details of our system because of 
> patents in process,

Bull. Once you have applied for the patent you no longer need be
secret -- indeed, you can still apply for a patent up to one year
after full publication.

> We are offering the software. You should be able to readily
> decompile it and determine the algorithms used andf how they are
> used to generate random number sequences for very long files.

Something tells me it wouldn't be worth my while. Until you guys get a
clue, none of my clients on Wall Street or elsewhere are coming within
a mile of your products. I won't even waste my time looking at them.

> If you are aware of encrtypting technology, you recognize that hardware 
> prime number cycle wheels for the basis of some of the most secured 
> hardware systems employed for encryption.

The cypherpunks mailing list is composed of some of the most
knowledgeable people in the field of cryptography in the
world. Therefore, you will pardon my noting that the phrase "prime
number cycle wheels" isn't a term any of us are familiar with. I don't
find the term anywhere in any of the literature, I don't recall it,
and if it was anything more than marketingese I would have. You do
seem to know enough to know that prime numbers play a bit of a role in
modern cryptography, but that seems to be it. They play very little
role in non-public key systems like yours.

> We simply expand that technogy 
> using software to set an intial setting, an adder, and a limit for 64 
> such wheels, using large random prime numbers for each of those settings. 
> The total number of possibilities is over 10 to the 1690th power and can 
> be much larger. 

Spare us the bull. You don't get security in a crypto system from
having impressive combinatorial explosions. A simple monoalphabetic
substitution can claim to have 403291461126605635584000000 possible
keys and you wouldn't trust your six year old cousin not to crack
it. (the number would be far, far more impressive if I'd taken all
ASCII characters instead of just the alphabet of 26 letters in to
account).

> Someone, will decompile it and discover that it is truly random, at least 
> from the practical usage basis.

"Truly random" and "for practical purposes" don't mix. If it isn't
truly random, then the question is whether or not the thing is, in
fact, a strong encryption system.

Time and time again, snake oil salesmen come up and delude themselves
and others into thinking that they have some sort of great encryption
system and time and time again it cracks open like an egg. You guys
have all the stigmata.

> The IPG system solves the key management problem

Public key cryptography did that 20 years ago. Where have you been?

> and produces a truly unbreakabkle system.

The only system that is truly unbreakable is a true one time pad, not
a fake one.

> We make no apologies for not currently revealing all 
> of the methodologies andf algorithms,

Too bad. You should be embarassed to even open your mouths.

Perry




