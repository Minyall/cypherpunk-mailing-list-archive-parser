From: bryce@digicash.com
Date: Sun, 12 May 1996 08:40:51 +0800
To: perry@piermont.com
Subject: Re: need nym-differentiation, perpetual motion, and FTL travel please
In-Reply-To: <199605111906.PAA07461@jekyll.piermont.com>
Message-ID: <199605111923.VAA07367@digicash.com>
MIME-Version: 1.0
Content-Type: text/plain



-----BEGIN PGP SIGNED MESSAGE-----


 The entity calling itself "Perry Metzger" <perry@piermont.com>
 is alleged to have written:

> bryce@digicash.com writes:
> > Unfortunately I can't think of a good way to have both
> > pseudonymity and nym-differentiation.  I think that it is
> > possible, however.  Can anyone suggest a mechanism?
> 
> Terminals which genetically sample their users?


I hate hardware solutions.  I'm a software guy.  <img alt=":-)"
src="http://www-ugrad.cs.colorado.edu/~wilcoxb/smiley.1.gif">


> Seriously, the problem, as stated, is thoroughly impossible to solve
> in the real world. Anyone can pretend to be anyone in the
> non-cyberspace world -- how can you stop them on the net?


Okay having said I couldn't think of a good way, I'll go
ahead and suggest a way.


Let's assume that it is possible to stop people from
pretending to be anyone in Real Life(tm).  (It is possible.)
Now let's collect N people and form a Dining-Cryptographers'
net.  Once the Dining-Cryptographers' net is up-and-running
let's put out a call for each of the N participants to
announce a public key which will be their nym from now on.
Assuming that you get N public keys, you can have _some_
degree of assurance that there is a one-to-one mapping
between pubkeys/nyms and humans on the DC-Net.


Voila.


It's weak and complicated, so I wouldn't call it a "good 
way", but it _is_ a way to have both pseudonymity and
nym-differentiation.



Now that I've done this part, would someone else handle the
perpetual motion, FTL travel, cold fusion and so forth?
Thanks.


Regards,

Bryce




-----BEGIN PGP SIGNATURE-----
Version: 2.6.2i
Comment: Auto-signed under Unix with 'BAP' Easy-PGP v1.1b2

iQB1AwUBMZTpGUjbHy8sKZitAQHK5QMAyYqR6Nv8j2HOMdq2JbTj1ZOiYhN2nbP9
WIwI92NyKVuv+i/PwGk8kkCsaGpq2n89/9JV2uKxvCN12m5on+rWwbDZeWUaHtgg
t7UXyGCV7bF8gauFvT1z2JMLmBzumZ4Q
=fnkf
-----END PGP SIGNATURE-----




