From: Eric Eden <erice@internic.net>
Date: Thu, 9 May 1996 16:15:26 +0800
To: warlord@MIT.EDU (Derek Atkins)
Subject: Re: Senator Leahy's Public Key
In-Reply-To: <9605081459.AA20668@bart-savagewood.MIT.EDU>
Message-ID: <199605090116.VAA25790@ops.internic.net>
MIME-Version: 1.0
Content-Type: text/plain


> 
> This is exactly what the web of trust is about.  The fact is that you
> can't trust the Keyservers (they were never designed to be trusted);
> you can't trust .plan files; you can't trust index.html files.
> However you can trust signatures made by trusted keys.  That is why
> the web of trust works.
 
> For example, I've met in person with a lot of people and we've signed
> each others' keys.  We've used various methods to "prove" identity.
> Sometimes it's been a long time of personal interactions (close
> friends).  Sometimes it's been a number of certifying documents, IDs,
> etc.  Sometimes it's been a piece of knowledge that I know the other
> has but no one else has.
 
What if you needed to set up a key server for a mass base of customers...
Obviously, authenticating them via e-mail would be difficult, verifying 
them in person would be harder.  Would there be any reasonable way to 
verify hundreds or thousands of customers?  Any manual method would 
be highly undesirable, right?  Imagine the labor involved....but lets 
pretend that the labor is not the deciding factor.  What would be the 
best way to verify the customers keys if you couldn't visit each 
customer in person? 

For example, would a photo copy of a drivers license be enough?

> The point is that once I'm attached to the web of trust I have a means
> to verify other keys.  I can set up a CA that way (MIT has one) --
> there is a keysigner that will use out-of-band means to verify the
> identity of a user and then use that to sign a PGP key in that
> person's name.

This is a good idea.  The obvious question is:

Would using an "out-of-band means" be worth the time and trouble if 
you had to scale the project to a commercial level?  Would it  
be a show stopper if the keys weren't verified?

> As I said already, the keyservers are not bulletproof.  In fact, they
> were never designed to be trusted.  They were designed to be an
> untrusted key distribution system.  The end-user is still supposed to
> verify the signatures on they keys received from the keyserver.
 
Last thought...if the end-user verifies the signature, is that enough
protection?

Eric





