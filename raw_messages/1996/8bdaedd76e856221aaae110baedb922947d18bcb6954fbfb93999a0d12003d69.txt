From: mrm@netcom.com (Marianne Mueller)
Date: Sat, 4 May 1996 17:51:16 +0800
To: iang@cs.berkeley.edu (Ian Goldberg)
Subject: Re: Calling other code in Java applications and applets
In-Reply-To: <4m8av7$sls@abraham.cs.berkeley.edu>
Message-ID: <199605040637.XAA13509@netcom20.netcom.com>
MIME-Version: 1.0
Content-Type: text/plain


> Jeff Weinstein  <jsw@netscape.com> wrote:
> >
> >  It might be interesting to make a small plugin that just does some core
> >stuff like gathering entropy, mod-exp, and related stuff difficult or too
> >slow in java.  I mainly brought it up because people were asking about
> >calling native code from java.
> >
> In an alternate universe in which I didn't have projects to finish, I may
> be interested in doing something like this.  However, I haven't been able
> to find information on how to write Unix (or preferably portable) plugins.
> 
> Any hints?
> 
>    - Ian

I don't have any hints, but I think people need to be aware up front
that calling native code from a Java applet disables
any security that might otherwise be enforced for the applet.  

It's OK to do this, as long as you understand up front how things work. 
One of the restrictions on applets is that they can't load DLLs or .so's. 
People get around that restriction by choosing to install a DLL on the
local machine in such a way that the applet can invoke methods defined in
that DLL (or .so) By choosing to do that, they're deliberately saying
"it's OK, I understand this native method might do anything at all on the
machine and it's OK by me" 

Marianne





