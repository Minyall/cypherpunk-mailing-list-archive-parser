From: lcs Remailer Administrator <mix-admin@nym.alias.net>
Date: Wed, 23 Oct 1996 17:21:26 -0700 (PDT)
To: Derek Atkins <warlord@ATHENA.MIT.EDU>
Subject: Re: MD5?
In-Reply-To: <199610231610.MAA14566@charon.MIT.EDU>
Message-ID: <199610240020.UAA01788@anon.lcs.mit.edu>
MIME-Version: 1.0
Content-Type: text/plain


Derek Atkins <warlord@ATHENA.MIT.EDU> writes:

> 
> > 	well, that is alright, &c.   BUT WHEN WILL 3.0 RELEASE?
> >     it has been imminent for at least 2 years.
> 
> It'll be released when it's done, dammit!  And it's almost done!
> Currently, I'm tracking down a few bugs, and a few details need to get
> solidified, but other than that I have it working on my desktop and I
> use it almost every day.
> 
> It's still got some testing to do, and it needs to get packaged up.
> And it still needs to get cleaned up a lot (the UI ain't pretty --
> even compared to 2.6.2!)  This is what is taking so long.
> 
> Come on, EVERY SINGLE LINE OF CODE WAS RE-WRITTEN!  And there are
> about 60000 lines in PGP3!  That's a lot of work, and the
> 70-30/80-20/90-10 rule is hitting hard.
> 
> It's coming.  We're trying to get it out as fast as we can.  But
> we're not going to sacrifice quality for a little bit of time.

Is there any way to I could possibly get a snapshot of the source code
if I agree not to bug you about it?  I have some servers that use PGP
pretty heavily, and will come under immediate preassure to upgrade to
3.0 as soon as it is released.  Any head start I can get would be
really really helpful.

While you may be offering a similar command line interface, I have
been forced to make heavy-duty use of what might turn out to be just
quirks in the 2.6.2 implementation.  For example, to encrypt with the
first key on a keyring, when I don't know the ID of that key, I use
the ID "0x" which just happens to work in 2.6.2 but has no reason to
work in 3.0.  In many places I also just rely on text processing
the standard output and error of PGP to look for particular strings.
Clearly this kind of thing is not going to be robust against against a
complete rewrite of the source code.

I understand that at this point the last thing you want is a whole
bunch of questions from beta testers to slow you down.  However, for
some people a look at the source code would be incredibly useful, even
if they can't ask you for any help with it.

Is there any way to work something like this out?

Thanks.




