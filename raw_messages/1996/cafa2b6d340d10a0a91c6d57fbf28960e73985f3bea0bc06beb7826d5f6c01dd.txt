From: Mike McNally <m5@tivoli.com>
Date: Tue, 17 Sep 1996 01:04:10 +0800
To: Dale Thorn <dthorn@gte.net>
Subject: Re: Cryptography of a sort - redux
In-Reply-To: <323CADBE.3D54@gte.net>
Message-ID: <323D53EC.298E@tivoli.com>
MIME-Version: 1.0
Content-Type: text/plain


Dale Thorn wrote:
> 
> The only way to recover the original text is to reposition the
> shuffled bits correctly, which requires brute-force guessing of the
> pseudo-random-number output. 

Even if I know the PRNG algorithm?  And just what is it that you
propose to use for the PRNG?

> This guess is very simple for the first encoding layer, but
> compounds exponentially in subsequent encodings

Exponentially?  Could you provide the math to explain how your
composition of PRNG's gives this exponential increase in 
difficulty?

> , so
> that after half a dozen or a dozen passes, where the executable
> program(s) is called from scratch for each pass, the shuffling rapidly
> approaches true randomness, and cannot be decrypted in practice except
> through the exact mirror-image reversal of the encryption passes.

So what do the encryption keys look like?  And what's this "true
randomness" stuff?


______c_________________________________________________________________
Mike M Nally * Tiv^H^H^H IBM * Austin TX * For the time being,
       m5@tivoli.com * m101@io.com       *    
      <URL:http://www.io.com/~m101>      * three heads and eight arms.




