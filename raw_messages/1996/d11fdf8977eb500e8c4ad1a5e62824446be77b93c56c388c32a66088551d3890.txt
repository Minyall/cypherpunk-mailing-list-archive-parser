From: Ted Anderson <ota+@transarc.com>
Date: Thu, 4 Apr 1996 16:38:26 +0800
To: vznuri@netcom.com
Subject: Re: java: vending machine software (long)
In-Reply-To: <199603282211.OAA15109@netcom14.netcom.com>
Message-ID: <QlMfpa2SMV0_1o3040@transarc.com>
MIME-Version: 1.0
Content-Type: text/plain


-----BEGIN PGP SIGNED MESSAGE-----

"Vladimir Z. Nuri" <vznuri@netcom.com> writes:
> Java seems to be catching on in a big way (only a few months ago,

These are important ideas.  I found them explored very nicely
in several papers written by Drexler and Miller (circa 1988!).  They
are available in the collection "Ecology of Computation (1988)" and
via the Agorics Home page (http://www.webcom.com/~agorics).

It seems that with the Web and Java now widely available the technical
means to implement these ideas are getting visibly closer.

> when one thinks about this, I think it becomes clear that we are going
> to see many, many new standards for code communication in the future.

The most interesting thing I've heard along these lines was described
in a talk by Matthew Fuchs.   He suggested the idea of using something
like SGML (of which HTML is a subset) to communicate between smart
agents.  The idea is to provide a machine understandable equivalent
of a web form which could be used to send info back and forth.  In
this application display instructions are not important, what is
important is the meaning assigned to the keywords.  For example, in
a simple web page you might use <title>, <body>, <author>, <h1>, etc.
The browser knows how display these because for simple documents they
have a well defined meaning, but an automatic document indexer could
also easily find the title and author.

Consider an airline reservation system.  It might support a variety of
commands to answer queries and make reservations.  Clearly once the
*meaning* is in hand, crafting a way to display it would be easy.  So
you have a scheme which can be used with equal facility by
either a human or a machine.  This allows for smooth transition from
human mediated to automated steps in a larger project (e.g. plan a trip
visiting these five cities) where some parts have been automated (e.g.
airline reservations) and other parts have not (say, hotel reservations).

Further, the system can be built out of layers of objects that give
meanings to various keywords.  Consider a bunch of keywords and
associated Java applets that understand dates and times (they know about
timezones and daylight savings and weekends and so forth).  Another
level of objects knows how to manage schedules, and still another
layer knows about travel arrangements.  The system used by a particular
airline uses all these objects to provide an interface for communicating
with customers (or their automated agents).

Java seems ideal suited to be the active lubricant in such a system.

Ted Anderson

-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQCVAwUBMWK8PwGojC9e/wyBAQFuVAQA0Z4qjeIs2j8bxEYqaxuwQLdw49oXTX5a
sN9L75sy8AmdMJjDfBuo8Kij7Iyx/ZrexJp/lsGS0pC76OpafNs0nfckQsblmrA5
9BzHe+PmDgPtJOvdCJYnR624PuioGihD/J8l2YZFf7/OfaRCXW2q/HvcBeuDWseS
zSIumBmiObo=
=F+Zv
-----END PGP SIGNATURE-----




