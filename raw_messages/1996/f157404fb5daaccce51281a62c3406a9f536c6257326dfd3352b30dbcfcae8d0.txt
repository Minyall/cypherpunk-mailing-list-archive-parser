From: "E. Allen Smith" <EALLENSMITH@ocelot.Rutgers.EDU>
Date: Sun, 15 Sep 1996 13:37:33 +0800
To: cypherpunks@toad.com
Subject: Uses of Computational Chaos
Message-ID: <01I9HJIYSVKK9ULPY6@mbcl.rutgers.edu>
MIME-Version: 1.0
Content-Type: text/plain


	It is reasonably obvious that using _computational_ (as opposed to
physical) chaos won't increase entropy. But how about using it to make an
attacker work harder to use any flaws in your method of generating random
bits? As a simplistic example, say that the scribble window you're using tends
to result in a 1 for each 3rd bit. Nice and simple for an attacker to exploit.
But if that output is then fed into a chaotic system as its starting conditions,
and you then take the state of that system after a sufficient number of
iterations and use it as the basis for the IDEA key or whatever, the attacker
doesn't just have to search through all the IDEA keys with the third bits being
1's - they have to process each of those through the chaotic system and use
those results. Sort of like factoring - checking any two given prime factors
will be rather easy, it's just the sheer number you have to check that makes
things difficult. (This can be thought of as an odd variety of hash,
particularly if you do something like chopping off the most-significant-bit
in the chaotic system's output.)
	-Allen




