From: Robert Hettinga <rah@shipwright.com>
Date: Sun, 20 Jul 1997 20:23:30 +0800
To: cypherpunks@toad.com
Subject: Re: Will Monolithic Apps Dominate?
In-Reply-To: <97Jul19.201054edt.32257@brickwall.ceddec.com>
Message-ID: <v0311071daff7a277f62e@[139.167.130.248]>
MIME-Version: 1.0
Content-Type: text/plain



At 12:52 am -0400 on 7/20/97, sar wrote:

Just to be clear, when I talk about geodesic software, I'm not talking
about linux, as much as I like the idea of linux personally. In fact, if
the Mac ever dies, I'll probably end up on linux someday. Certainly, once
you put any machine on the internet, its software becomes more geodesic
than it was sitting on a desktop or in a rack, and, for the sake of
argument, I'm willing to agree that because of increasing availablity of
cool free net.stuff in linux, it may more geodesic than Microsoft or Apple
operating systems.

I could be wrong, but the cycle from not having what you need to do
something new, to installing it and running it, is too slow for modern
operating systems like linux to call them geodesic software in the sense
that I was using the phrase. Java the brand-name claims to do this in
"market"space, but Java as running software ain't there yet in cyberspace,
and may never be.

I'm beginning to think that until it's possible for a given processor to
autonomously buy the software it needs for cash in an auction market, and
then download and install that software, all at run time, the
superscalibility of an environment where software is dispersed through the
network (again, "surfacted" is not a bad word to describe this), and run in
the smallest possible bits at the processor level just won't happen.

Nonetheless, I do think that the linux gang is going in the right
direction, especially since most most of the cash-settlement technology we
on this list have all come to know and love is more likely to be used in
linux than anywhere else.


Finally, there's the issue of Mhyrvold's software-as-a-gas idea. That is,
that bloatware is a direct result of Moore's Law. Or, more properly,
Parkinson's Law of bureaucracy ("an organization will expand to fit it's
available resources") come to microprocessing.

In an absolute sense, of course, more processing power is more software
waste. My Mac wastes more cycles than I can physically count in a lifetime
waiting for my next keystroke, and, after more than half a lifetime at the
keyboard, I am a pretty fast typist.

 However, at some point, I think that the added "waste" of profit-and-loss
responsibility at the processor level, effectively a cash-settled auction
market for cycle-time, will yield much more efficiency in allocating
processor time than piling on yet another feature and compiling it in with
the rest of some vertically integrated application behemouth. Waiting for
everybody else's requested features to creep by before the application can
let us have the one we need to use will be a thing of the past when that
happens.

Cheers,
Bob Hettinga





-----------------
Robert Hettinga (rah@shipwright.com), Philodox
e$, 44 Farquhar Street, Boston, MA 02131 USA
"... however it may deserve respect for its usefulness and antiquity,
[predicting the end of the world] has not been found agreeable to
experience." -- Edward Gibbon, 'Decline and Fall of the Roman Empire'
The e$ Home Page: http://www.shipwright.com/






