From: Ryan Lackey <rdl@mit.edu>
Date: Sun, 11 Jan 1998 19:15:56 +0800
To: "Raymond D. Mereniuk" <Raymond@fbn.bc.ca>
Subject: Re: In God We Antitrust, from the Netly News
Message-ID: <tw73eivi7t4.fsf@the-great-machine.mit.edu>
MIME-Version: 1.0
Content-Type: text/plain



> [people disparaging the  AMD/Cyrix Processors, as well as defending them]

I have used a K6-200 overclocked to a K6-300 (83mhz bus speed) for
some time now, mostly accomplishing the cooling issue by leaving it
in my bedroom with the window open all winter.  It's a great
value -- for $200+$100 I got a processor and motherboard capable of
PII-level performance in things like code compiles, etc.  I've even
hand-optimized some code for the K6 -- it's a great chip.

If I find investors/customers/etc. by March-July 98 for Eternity DDS, though, 
I'm planning to buy 8 DEC AlphaPC motherboards with dual 21264 processors.
Some pieces of Eternity DDS are now being implemented in Oracle for
speed of implementation reasons, and other pieces are being prototyped
in Scheme (maybe), so even my K6 is getting hammered.  Plus, I'm now testing
some kernel modifications, and having to reboot the only functional server,
bring Oracle back up, initialize the world, bring up a web server and
an encrypted filesystem, etc. all without disrupting service too much
whenever I make a minor change, then do it every time I need to change
one character in the kernel, is really annoying.  Running the different
services on different machines would be far more realistic and practical.

[*Obcrypto*: I have gotten incredibly backed up with work of various
kinds, and email.  However, I still have time for silly web service
questions.  Here goes:

Does anyone know of a way I can take a web server, say AOLserver, which
does not support useful SSL, and also does not distribute source, and
retrofit a useful 128-bit SSL implementation to it?  It has a C API, but
I haven't looked at the API enough to see if I could do it within the API.
Are there any proxies which could be stuck between the insecure server
and the user (preferably with an ssh link between the servers) which could
provide SSL proxy service?  It seems like this should be trivial to do,
but I haven't tried yet, and I want to have some reedeming value for this
post.]
-- 
Ryan Lackey
rdl@mit.edu
http://mit.edu/rdl/		





