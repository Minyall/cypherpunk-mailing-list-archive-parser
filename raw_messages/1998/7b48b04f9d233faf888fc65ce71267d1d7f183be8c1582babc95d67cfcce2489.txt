From: nobody@REPLAY.COM (Anonymous)
Date: Sun, 25 Jan 1998 04:09:18 +0800
To: cypherpunks@cyberpass.net
Subject: NoneRe: How to eliminate liability?
In-Reply-To: <19980123052334.20406.qmail@hotmail.com>
Message-ID: <199801242003.VAA07620@basement.replay.com>
MIME-Version: 1.0
Content-Type: text/plain



John M wrote:

> Well, what about spreading the information out?  Something simple like
> doing a matrix rotation on the scrambled data in 8 byte blocks and
> splice it by bit to split the data up, add ECC (error correction code)
> to it, and spread it to several servers.  This way no one server has all
> the information necessary to recreate the "offending" information and if
> one server gets "hit" (killed), the information can still be regenerated
> from the the information and ECC from the other servers.


This seems like another variation of the 'reverse secret-sharing' schemes,
independently proposed by Jim McCoy, Matt Ghio, and others.

Cooper and Birman give a good theoretical introduction at
http://cs-tr.cs.cornell.edu/TR/CORNELLCS:TR95-1490
although their scheme uses only the simple XOR instead of a full matrix.

Ghio's version is at
http://infinity.nus.sg/cypherpunks/dir.archive-97.06.12-97.06.18/0391.html

Neither paper goes heavily into linear algebra, but the scheme can easily
be extended to martices in a finite field, xor being the special case of
mod 2.

The idea's been around for awhile; it'd be nice to see a working
implementation (hint, hint).





