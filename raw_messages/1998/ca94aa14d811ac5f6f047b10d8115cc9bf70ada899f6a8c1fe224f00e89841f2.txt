From: Xcott Craver <caj@math.niu.edu>
Date: Tue, 7 Jul 1998 10:53:49 -0700 (PDT)
To: mgraffam@mhv.net
Subject: RE: Junger et al.
In-Reply-To: <Pine.LNX.3.96.980707030820.4214B-100000@ismene>
Message-ID: <Pine.SUN.3.91.980707123907.25394A-100000@baker>
MIME-Version: 1.0
Content-Type: text/plain


On Tue, 7 Jul 1998 mgraffam@mhv.net wrote:

> Indeed.. what we need is for someone to testify to the court about
> natural and computer language, and maybe some relevent material from
> information theory. 

	What we need, IMO, is a well-placed stunt or two.

	On sci.crypt a while ago I mentioned that if perl-RSA got
	any smaller, one could make it the *subtitle* of one's next
	book:  "Blah blah blah:  what ``/usr/bin/perl blah blah blah
	...'' means."

	The result would be a book, with book-like 1st amendment
	protections, but which would turn ONLINE library card 
	catalogs into online repositories for strong crypto.  Need RSA?
	Look up the book, cut and paste into a shell.  Ta Daaaa!
	You're an evil terrorist.

	The point of this is to drive home the fact that while
	source code is something that *does* (i.e., a device),
	it's also something that *says*.  It's information, even
	if executable information, and cannot be dispatched as 
	easily as a gun or a bomb.  Should the government attempt
	to declare a book title a munition, it'll fer sure end up
	in CNN fringe.

> Pseudo-code from any computer programming textbook would be helpful
> in making this point too.

	You'd need to prove it easily runnable.  What's the tech
	status of OCR via, say, a minicam?  If you could just 
	hold a page of _Applied Crypto_ up to your computer and
	have it gleen C source (much easier than gleening English),
	It'll demonstrate the fuzziness of these things (again, IMO) 
	in much starker terms than would just using a scanner.

	Another project would be to collect all our number theory
	and abstract algebra books, and type in verbatim the sections
	on RSA.  These usually contain instructions somewhere between
	pseudocode and conversational English.  If someone could 
	for a Masters thesis develop a program capable of reading 
	that stuff...

							-Caj




